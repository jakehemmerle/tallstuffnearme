// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = "postgresql://postgres:example@localhost:5432/postgres"
}

model FAAObject {
  OASNumber      Int          @id
  Verified       String
  Country        String
  State          String
  City           String
  Latitude       Float
  Longitude      Float
  ObstacleType   ObstacleType @default(UNDEFINED)
  AGL            Int
  AMSL           Int
  LT             String
  H              String
  AccV           String
  MarInd         String
  FAAStudyNumber String
  Action         String
  JDate          String
}

enum ObstacleType {
  RIG
  STACK
  BLDG
  TOWER
  POLE
  ELEC_SYS
  TL_TWR
  TANK
  BRIDGE
  SIGN
  REFINERY
  FENCE
  PLANT
  GEN_UTIL
  ELEVATOR
  ANTENNA
  NAVAID
  CTRL_TWR
  SILO
  UTILITY_POLE
  CRANE
  BLDGTWR
  VERTICAL_STRUCTURE
  AG_EQUIP
  CATENARY
  WINDSOCK
  DOME
  SOLAR_PANELS
  MET
  AMUSEMENT_PARK
  MONUMENT
  STADIUM
  COOL_TWR
  DAM
  WINDMILL
  LANDFILL
  POWER_PLANT
  TRAMWAY
  BALLOON
  SPIRE
  WALL
  HEAT_COOL_SYSTEM
  NATURAL_GAS_SYSTEM
  LGTHOUSE
  PIPELINE_PIPE
  HANGAR
  ARCH
  GRAIN_ELEVATOR
  GATE
  WIND_INDICATOR
  UNDEFINED
}

// these are for the test db
model User {
  id           Int              @id @default(autoincrement())
  name         String?
  email        String           @unique
  profileViews Int              @default(0)
  role         Role             @default(USER)
  coinflips    Boolean[]
  posts        Post[]
  city         String
  country      String
  profile      ExtendedProfile?
  pets         Json
}

model ExtendedProfile {
  id     Int     @id @default(autoincrement())
  userId Int?    @unique
  bio    String?
  User   User?   @relation(fields: [userId], references: [id])
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  published Boolean @default(true)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Json
  views     Int     @default(0)
  likes     Int     @default(0)
}

enum Role {
  USER
  ADMIN
}
